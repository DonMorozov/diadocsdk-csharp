//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: RoamingOperatorInformation.proto
namespace Diadoc.Api.Proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RoamingOperatorList")]
  public partial class RoamingOperatorList : global::ProtoBuf.IExtensible
  {
    public RoamingOperatorList() {}
    
    private readonly global::System.Collections.Generic.List<Diadoc.Api.Proto.RoamingOperatorInformation> _RoamingOperators = new global::System.Collections.Generic.List<Diadoc.Api.Proto.RoamingOperatorInformation>();
    [global::ProtoBuf.ProtoMember(1, Name=@"RoamingOperators", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Diadoc.Api.Proto.RoamingOperatorInformation> RoamingOperators
    {
      get { return _RoamingOperators; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RoamingOperatorInformation")]
  public partial class RoamingOperatorInformation : global::ProtoBuf.IExtensible
  {
    public RoamingOperatorInformation() {}
    
    private string _FnsId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"FnsId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string FnsId
    {
      get { return _FnsId; }
      set { _FnsId = value; }
    }
    private string _OperatorName;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"OperatorName", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string OperatorName
    {
      get { return _OperatorName; }
      set { _OperatorName = value; }
    }
    private readonly global::System.Collections.Generic.List<Diadoc.Api.Proto.OperatorFeature> _OperatorFeatures = new global::System.Collections.Generic.List<Diadoc.Api.Proto.OperatorFeature>();
    [global::ProtoBuf.ProtoMember(3, Name=@"OperatorFeatures", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Diadoc.Api.Proto.OperatorFeature> OperatorFeatures
    {
      get { return _OperatorFeatures; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"OperatorFeature")]
  public partial class OperatorFeature : global::ProtoBuf.IExtensible
  {
    public OperatorFeature() {}
    
    private string _Name;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"Name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Name
    {
      get { return _Name; }
      set { _Name = value; }
    }
    private bool _IsEnabled;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"IsEnabled", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsEnabled
    {
      get { return _IsEnabled; }
      set { _IsEnabled = value; }
    }
    private string _Description;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"Description", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Description
    {
      get { return _Description; }
      set { _Description = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}